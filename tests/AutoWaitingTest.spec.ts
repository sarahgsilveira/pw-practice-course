/* 
To run the tests, please initialize Playwright:
1. Initialize the terminal.
2. Run Task: Select NPM and choose "START NG SERVE".
*/

/* 
AUTO WAITING:  https://playwright.dev/docs/actionability
Playwright automatically waits for elements to be actionable before performing any action.
It performs various checks, such as visibility and stability, and ensures the element is ready before interacting.
If the checks do not pass within the specified timeout, Playwright throws a TimeoutError.
*/

import { test, expect } from '@playwright/test';

/**
 * Test Suite: Precondition Setup for Auto Waiting
 * 
 * Preconditions:
 * - The webpage 'http://uitestingplayground.com/ajax' must be accessible and loaded before each test.
 * 
 * Actions:
 * - Navigate to the webpage and click the button triggering the AJAX request.
 * 
 * Expected Results:
 * - The page loads correctly and the button is clicked, starting the AJAX request.
 */
test.beforeEach(async ({ page }) => {
    // Action: Navigate to the AJAX testing page
    await page.goto('http://uitestingplayground.com/ajax');

    // Action: Click the button that triggers the AJAX request
    await page.getByText('Button Triggering AJAX Request').click();

    // Expected Results: The button should trigger an AJAX request upon being clicked.
});

/**
 * Test Case: Auto Waiting for AJAX Request Completion
 * 
 * Actions:
 * - Wait for the text generated by the AJAX request to appear.
 * - Verify that the text content matches the expected value.
 * 
 * Expected Results:
 * - The text content should display "Data loaded with AJAX get request." once the AJAX request completes.
 */
test('Auto Waiting', async ({ page }) => {
    // Action: Locate the element that will display the success message after the AJAX request
    const successButton = page.locator('.bp-success');

    // Action: Retrieve the text content of the success message
    const text = await successButton.textContent();

    // Expected Results: Verify that the text content matches the expected AJAX success message
    expect(text).toEqual('Data loaded with AJAX get request.');
});
